<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
     <!-- namespace="패키지명.인터페이스" -->
     <mapper namespace="com.spring.tutorial.dao.AttendanceDAO">   		
   		
   		<!-- 일일 근태 확인 -->
   		<select id="attendanceDay" parameterType="String" resultType="com.spring.tutorial.dto.AttendanceDTO">
   			select * from grb_attendance 
   			where id=#{id} AND today LIKE to_date(sysdate,'yyyy-MM-dd')
   			ORDER BY attend_id DESC 
   		</select>  		   		   		   			
   		
   		<!-- 업무 시작 처리 -->
   		<insert id="attendin" parameterType="String">   			
		   	INSERT INTO grb_attendance (attend_id, id, attendin, RESULT, state, year, month, day, dy , clock)
			VALUES((SELECT NVL(Max(attend_id)+1,1) FROM grb_attendance), #{id}, sysdate, 1, '업무', 
			to_char(sysdate,'yyyy'), to_char(sysdate,'MM'), to_char(sysdate,'dd'), to_char(sysdate,'dy'), to_char(sysdate, 'HH24:MI:SS'))
   		</insert>  		  		
   		
   		<!-- 업무 종료 처리 -->
		<insert id="attendout" parameterType="String">   			
		   	INSERT INTO grb_attendance (attend_id, id, attendout, RESULT, state, year, month, day, dy, clock)
			VALUES((SELECT NVL(Max(attend_id)+1,1) FROM grb_attendance), #{id}, sysdate, 0, '업무종료', 
			to_char(sysdate,'yyyy'), to_char(sysdate,'MM'), to_char(sysdate,'dd'), to_char(sysdate,'dy'), to_char(sysdate, 'HH24:MI:SS'))
   		</insert> 
		
   		<!-- 일일 근무 시간 update -->
   		<update id="updateworktime" parameterType="java.util.Map">
   			update grb_attendance set worktime=#{worktime}
   			where id=#{id} and attend_id=(SELECT max(attend_id) FROM grb_attendance)
   		</update>
		
		<!-- 일일 근무 시간 -->
		<select id="daywork" parameterType="String" resultType="int">					
			SELECT to_number(sum(worktime)) FROM grb_attendance
			WHERE id=#{id} AND state='업무종료' 
			AND today LIKE to_date(sysdate, 'yyyy-MM-dd')						
		</select>
		
		<!-- 주간 누적+연장 근무 시간 -->
		<select id="workover" parameterType="java.util.Map" resultType="int">
			<![CDATA[			
			SELECT DISTINCT to_number(sum(
				(SELECT sum(worktime) FROM grb_attendance 
				WHERE id=#{id}  AND state IN ('업무종료','연장')
				AND month LIKE to_char(sysdate, 'MM')			
				AND #{start} <= day AND day <= #{end}) +
				(SELECT sum(overtime) FROM grb_attendance
				WHERE id=#{id}  AND state IN ('업무종료','연장')
				AND month LIKE to_char(sysdate, 'MM')			
				AND #{start} <= day AND day <= #{end})
			)) AS worktime
			FROM grb_attendance
			WHERE id=#{id}  AND state IN ('업무종료','연장')
			AND month LIKE to_char(sysdate, 'MM')			
			AND #{start} <= day AND day <= #{end}
			GROUP BY worktime, overtime
			 ]]>
		</select>
		
		<!-- 주간 누적 근무 시간 -->
		<select id="worktime" parameterType="java.util.Map" resultType="int">
			<![CDATA[			
			SELECT to_number(sum(worktime)) FROM grb_attendance 
			WHERE id=#{id}  AND state = '업무종료'
			AND month LIKE to_char(sysdate, 'MM')			
			AND #{start} <= day AND day <= #{end}			
			]]>
		</select>
		
		<!-- 주간 연장 근무 시간 -->
		<select id="overtime" parameterType="java.util.Map" resultType="int">
			<![CDATA[			
			SELECT to_number(sum(overtime)) FROM grb_attendance 
			WHERE id=#{id}  AND state = '연장'
			AND month LIKE to_char(sysdate, 'MM')			
			AND #{start} <= day AND day <= #{end}			
			]]>
		</select>		
		
		<!-- 월 연장 근무 시간 -->
		<select id="overmonth" parameterType="java.util.Map" resultType="int">					
			SELECT to_number(sum(overtime)) FROM grb_attendance 
			WHERE id=#{id}  AND state = '연장'
			AND month LIKE to_char(sysdate, 'MM')					
		</select>
			
		<!-- 나의 주간 근무 조회 -->
   		<select id="attendanceWeek" parameterType="java.util.Map" resultType="com.spring.tutorial.dto.AttendanceDTO">
   			<![CDATA[
   			SELECT * FROM grb_attendance
			WHERE id=#{id} AND month LIKE to_char(sysdate, 'MM')
			AND #{start} <= day AND day <= #{end}
			ORDER BY today
			 ]]>
   		</select>   		   		
   		
   		<!-- 나의 월 누적 근무 시간 -->
		<select id="monthtotal" parameterType="java.util.Map" resultType="int">
			<![CDATA[			
			SELECT DISTINCT to_number(sum(
				(SELECT sum(worktime) FROM grb_attendance 
				WHERE id=#{id}  AND state IN ('업무종료','연장')
				AND month LIKE to_char(sysdate, 'MM')			
				) +
				(SELECT sum(overtime) FROM grb_attendance
				WHERE id=#{id}  AND state IN ('업무종료','연장')
				AND month LIKE to_char(sysdate, 'MM')			
				)
			)) AS worktime
			FROM grb_attendance
			WHERE id=#{id}  AND state IN ('업무종료','연장')
			AND month LIKE to_char(sysdate, 'MM')					
			GROUP BY worktime, overtime
			 ]]>
		</select>
   		
   		<!-- 나의 월 근무 시간 -->
   		<select id="monthwork" parameterType="String" resultType="int">  					
   			SELECT to_number(sum(worktime)) FROM grb_attendance
			WHERE id=#{id} AND month LIKE to_char(sysdate, 'MM')				 
   		</select>
   		
   		<!-- 월 근태 현황 -->
   		<select id="attendanceMonth" parameterType="String" resultType="com.spring.tutorial.dto.AttendanceDTO">
   			select * from grb_attendance 
   			where id=#{id} AND month LIKE to_char(sysdate, 'MM')
   			ORDER BY DAY, today
   		</select>
   		
   		<!-- 주 연장 카운트 -->
   		<select id="overweek_cnt" parameterType="java.util.Map" resultType="int">
   			<![CDATA[  					
   			SELECT count(overtime) FROM grb_attendance
			WHERE id=#{id} AND month LIKE to_char(sysdate, 'MM')
			AND #{start} <= day AND day <= #{end}
			 ]]>				 
   		</select> 
   		
   		<!-- 월 연장 카운트 -->
   		<select id="overmonth_cnt" parameterType="String" resultType="int">  					
   			SELECT count(overtime) FROM grb_attendance
			WHERE id=#{id} AND month LIKE to_char(sysdate, 'MM')				 
   		</select> 
   		
   		<!-- 월 출근 카운트 -->
   		<select id="attendin_cnt" parameterType="String" resultType="int">  					
   			SELECT count(attendin) FROM grb_attendance
			WHERE id=#{id} AND month LIKE to_char(sysdate, 'MM')				 
   		</select>   		   		
		
		<!-- 최종 근무 날짜 -->
		<select id="day_cnt" parameterType="String" resultType="int">  
			SELECT to_number(max(day)) FROM grb_attendance
			WHERE id=#{id} AND month LIKE to_char(sysdate, 'MM')
		</select>
		
		<!-- 월 지각 카운트 -->
		<select id="late_cnt" parameterType="String" resultType="int">  
			SELECT count(ATTENDIN) FROM grb_attendance
			WHERE id=#{id} AND clock >= (SELECT ATTENDIN FROM C_ATTENDANCE) 
			AND month LIKE to_char(sysdate, 'MM')
		</select>
		
		<!-- 사원 등록 시 연차 발생 -->
		<insert id="newannual" parameterType="java.util.Map">  
			INSERT INTO grb_annual (annual_id, id)
			VALUES((SELECT NVL(Max(annual_id)+1,1) FROM grb_annual), #{id})
		</insert>
		
		<!-- 연도별 내 연차 내역 -->
		<select id="attendanceRestInfo" parameterType="java.util.Map" resultType="com.spring.tutorial.dto.AnnualDTO">  
			SELECT a.*, m.image, m.name, m.depart_name			
			FROM grb_annual a JOIN grb_member m ON a.ID = m.ID
			WHERE a.id=#{id} and year=#{year} AND annual IN ('연차', '반차')
			ORDER BY annual_id desc
		</select>
		
		<!-- 연도별 발생 연차 연차 사용 확인 -->
		<select id="yearRestInfo" parameterType="java.util.Map" resultType="com.spring.tutorial.dto.AnnualDTO">  
			SELECT a.annual_id, a.id, a.today, a.annual_in, a.annual_out, a.annual, a.annualtotal,
			a.YEAR, a.MONTH, a.state, m.image, m.name, m.depart_name, 
			(SELECT sum(annualuse) FROM grb_annual WHERE year=#{year}) AS annualuse,
			(SELECT min(annualrest) FROM grb_annual WHERE year=#{year}) AS annualrest
			FROM grb_annual a JOIN grb_member m ON a.ID = m.ID 
			WHERE a.id='20220002' and year=#{year}
			ORDER BY ANNUAL_ID desc 
		</select>
		
		<!-- 연차 반차 신청 -->
		<insert id="request_rest" parameterType="java.util.Map">  
			INSERT INTO grb_annual (annual_id, id, annual, annualuse, annualrest, annual_in, annual_out, state)
			VALUES((SELECT NVL(Max(annual_id)+1,1) FROM grb_annual), #{id}, #{annual}, to_number(#{annualuse}), to_number(#{annualrest}), to_date(#{annual_in}, 'yyyy-MM-dd'), to_date(#{annual_out}, 'yyyy-MM-dd'), '신청')
		</insert>
		
		<!-- 연장 근무 신청 -->
		<insert id="request_over" parameterType="java.util.Map">  
			INSERT INTO grb_attendance (attend_id, id, attendin, attendout, RESULT, overtime, state, year, month, day, dy, clock)
			VALUES((SELECT NVL(Max(attend_id)+1,1) FROM grb_attendance), #{id}, #{attendin}, #{attendout}, 1, #{overtime}, '연장', 
			to_char(sysdate,'yyyy'), to_char(sysdate,'MM'), to_char(sysdate,'dd'), to_char(sysdate,'dy'), to_char(sysdate, 'HH24:MI:SS'))
		</insert>
		
		<!-- 일일 연장 신청 1회 -->
		<select id="over_cnt" parameterType="String" resultType="int">  
			SELECT to_number(count(overtime)) FROM grb_attendance
			WHERE id=#{id} AND day LIKE to_char(sysdate, 'dd') AND month LIKE to_char(sysdate, 'MM')
		</select>
		
     </mapper>